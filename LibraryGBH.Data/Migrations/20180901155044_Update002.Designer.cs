// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using LibraryGBH.Data;

namespace LibraryGBH.Data.Migrations
{
    [DbContext(typeof(LibraryGBHDataContext))]
    [Migration("20180901155044_Update002")]
    partial class Update002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryGBH.Business.Entities.ProductosPool", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductoPoolId");

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deferred")
                        .HasColumnName("DeleteFlag");

                    b.Property<string>("Descripcion")
                        .HasColumnName("Descripcion");

                    b.Property<string>("Nombre")
                        .HasColumnName("Nombre");

                    b.Property<long?>("ProductoId");

                    b.Property<long?>("ProductosTiendaId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid>("UpdatedById");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("img")
                        .HasColumnName("img");

                    b.HasKey("Id");

                    b.HasIndex("ProductosTiendaId");

                    b.ToTable("ProductosPool");
                });

            modelBuilder.Entity("LibraryGBH.Business.Entities.ProductosTienda", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductoId");

                    b.Property<string>("CodigoProducto")
                        .HasColumnName("CodigoProducto");

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deferred")
                        .HasColumnName("DeleteFlag");

                    b.Property<double>("Precio")
                        .HasColumnName("Precio");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid>("UpdatedById");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductosTienda");
                });

            modelBuilder.Entity("LibraryGBH.Business.Entities.ProductosPool", b =>
                {
                    b.HasOne("LibraryGBH.Business.Entities.ProductosTienda", "ProductosTienda")
                        .WithMany("ProductosPool")
                        .HasForeignKey("ProductosTiendaId");
                });
#pragma warning restore 612, 618
        }
    }
}
